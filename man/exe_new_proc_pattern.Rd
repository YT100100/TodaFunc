% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/exe_new_proc_pattern.R
\name{exe_new_proc_pattern}
\alias{exe_new_proc_pattern}
\title{Executing sequential processing patterns which have not done before}
\usage{
exe_new_proc_pattern(
  exe_func_list,
  outdir,
  input_path_vec = NULL,
  exe_pattern = NULL,
  remove_pattern = NULL,
  redo_past_pattern = FALSE
)
}
\arguments{
\item{exe_func_list}{A named list of functions to be executed.
Each functions should have `outdir` argument, a directory to save results.
Names of this list is used in folders' name of results.
If you use `input_path_vec` argument (see below), 
functions should also have `input_dir` argument, a vector of directories to read data.
This vector has the same names you used in `input_path_vec`,
so you can use that names to specify elements in vector `input_dir` in your functions.}

\item{outdir}{A directory to save results (character).}

\item{input_path_vec}{A named vector of input directories (character).
If you read data in functions in `exe_func_list`, 
which are created by `exe_new_proc_pattern()`,
please specify its directory using this argument.
Each elements should be named, 
so that you can access to each elements in functions in `exe_func_list`.
If you read data which is not created with this function,
you don't need to use this argument, just read it directly in your functions.}

\item{exe_pattern}{If you want to execute specific patterns of input directory and functions,
you can specify that pattern as a data frame in `exe_pattern`.}

\item{remove_pattern}{If you want not to execute specific patterns of input directory and functions,
you can specify that pattern as a data frame in `remove_pattern`.}

\item{omit_past_pattern}{Logical (default = `TRUE`).
If you want to redo patterns which was run in the past, set it `FALSE`.}
}
\value{
NULL.
}
\description{
Executing sequential processing patterns which have not done before
}
\details{
This function executes functions in `exe_func_list` 
using input data specified in `input_path_vec`.
Folders to save results is automatically created in the directory specified with `outdir`.
Information of each execution is recorded in folders' names, such as
[outdir]__[function_name]__[name_of_input_directory_1]__[name_of_input_directory_2]...
}
